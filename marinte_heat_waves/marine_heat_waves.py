# -*- coding: utf-8 -*-
"""marine_heat_waves.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TUFF8ALkQ_s0-tXNFSHL9oSdEPULekC2

#
---
"""

# Import packages
import os
import zipfile
import time
import xarray as xr
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

!python -V

# prompt: mount drive

from google.colab import drive
drive.mount('/content/drive')

folder_path = "/content/drive/MyDrive/PyOceanography_course/data/MHW/"

"""## P90
---
"""

# Unzip file wiht python
with zipfile.ZipFile(folder_path + 'ia.zip', 'r') as zip_ref:
    zip_ref.extractall(folder_path)

# Load data
ds = xr.open_dataset(folder_path + 'tss_reanalise_2010_horario.nc')

ds

# Mean in time to get day resolution in xarray
ds_daily_2010 = ds.resample(time='1D').mean()
ds_daily_2010

ds_daily_2010_latlon_avg = ds_daily_2010.mean(dim=['latitude', 'longitude'])
ds_daily_2010_latlon_avg

ds_daily_2010_latlon_avg['sst'].plot()

# prompt: get the value obve P90 in a dataset xarray

p90 = ds_daily_2010_latlon_avg.quantile(0.9, dim='time')['sst'].data
print(f'P90: {p90}')
above_p90 = ds_daily_2010_latlon_avg.where(ds_daily_2010_latlon_avg > p90, drop=True)

above_p90

# Plot time series of ds_daily_2010_latlon_avg with a line representing the p90
plt.plot(ds_daily_2010_latlon_avg['time'], ds_daily_2010_latlon_avg['sst'])
plt.axhline(y=p90, color='r', linestyle='--', label='P90')
plt.xlabel('Time')
plt.ylabel('Sea Surface Temperature')
plt.title('Daily Sea Surface Temperature with P90')
plt.legend()
plt.show()

above_p90['sst'].plot()
#

above_p90['sst'].time

above_p90['sst'].to_netcdf(folder_path + 'above_p90.nc')

above_p90['sst'].to_dataframe().to_csv(folder_path + 'above_p90.csv')

"""##
---
"""

!pip install python==3.9

# prompt: load csv wiht pandas
df = pd.read_csv(folder_path + 'mhw.csv')
df

# prompt: Using dataframe df: use time col as datetimeindex

df['time'] = pd.to_datetime(df['time']) # convert 'time' column to datetime objects
df = df.set_index('time') # set 'time' column as the index